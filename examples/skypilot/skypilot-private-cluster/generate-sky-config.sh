#!/bin/bash
# generate-sky-config.sh: Render .sky.yaml from template using envsubst, auto-installs envsubst if missing
set -euo pipefail

TEMPLATE_FILE=".sky.yaml.template"
OUTPUT_FILE=".sky.yaml"

# Check for envsubst, install if missing
if ! command -v envsubst >/dev/null 2>&1; then
  echo "envsubst not found. Installing..."
  if [[ "$OSTYPE" == "darwin"* ]]; then
    if command -v brew >/dev/null 2>&1; then
      brew install gettext
      export PATH="$(brew --prefix gettext)/bin:$PATH"
    else
      echo "Homebrew not found. Please install Homebrew and rerun this script." >&2
      exit 1
    fi
  elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    sudo apt-get update && sudo apt-get install -y gettext
  else
    echo "Unsupported OS. Please install envsubst manually." >&2
    exit 1
  fi
fi
source .env
# Check required env vars
: "${REGION_ID:?REGION_ID must be set in your environment (.env).}"
: "${PROJECT_ID:?PROJECT_ID must be set in your environment (.env).}"
: "${JUMP_HOST_IP:?JUMP_HOST_IP must be set in your environment (.env).}"

# Render the config to a temp file first
tmpfile=$(mktemp)
envsubst < "$TEMPLATE_FILE" > "$tmpfile"

# Prepend an auto-generated header to the output
{
  echo "# Auto-generated by generate-sky-config.sh â€” do not edit .sky.yaml directly";
  echo "# Edit .sky.yaml.template and re-run ./generate-sky-config.sh instead.";
  cat "$tmpfile";
} > "$OUTPUT_FILE"
rm -f "$tmpfile"

echo "Rendered $OUTPUT_FILE from $TEMPLATE_FILE with auto-generated header."
